#!/bin/sh

do_erl () {
    erl -sname docsh -noinput -noshell \
    -pa _build/default/lib/docsh/ebin/ \
    -pa _build/default/lib/docsh/test \
    $@
}

edoc () {
    local subcmd=$1
    local module=$2
    case $subcmd in
    flat)
        export DOCSH_DEBUG=flat
        do_erl -eval 'docsh_edoc:flat("'$module'"),halt().'
        ;;
    xml)
        export DOCSH_DEBUG=xml
        do_erl -eval 'docsh_edoc:to_internal("'$module'"),halt().' \
            | sed -n -e '/^<?xml/,$p' \
            | xmllint --format -
        ;;
    html)
        export DOCSH_DEBUG=html
        do_erl -eval 'docsh_edoc:to_internal("'$module'"),halt().' \
            | sed -n -e '/^<!DOCTYPE/,$p'
        ;;
    tree)
        export DOCSH_DEBUG=edoc
        do_erl -eval 'docsh_edoc:to_internal("'$module'"),halt().'
        ;;
    to_internal)
        do_erl -eval 'docsh_edoc:to_internal("'$module'"),halt().'
    esac
}

syntax () {
    local subcmd=$1
    local module=$2
    case $subcmd in
    to_internal)
        do_erl -eval 'docsh_syntax:to_internal("'$module'"),halt().'
    esac
}

SUBCMD=$1
case $SUBCMD in
edoc|syntax)
    shift
    $SUBCMD $@
    ;;
*)
    echo $0: $cmd unknown
    usage
    ;;
esac
