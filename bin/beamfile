#!/usr/bin/env escript
%%!
%% -*- erlang -*-
%% vim: ft=erlang

-module(beamfile).
-mode(compile).

-define(ERLANG_TERM_FORMAT_TAG, 131).

main(["chunk" | Args])      -> chunk(Args);
main(["decompile" | Args])  -> decompile(Args).

chunk([ChunkName, BEAMFile]) ->
    {ok, _, Chunks} = beam_lib:all_chunks(BEAMFile),
    case lists:keyfind(ChunkName, 1, Chunks) of
        false ->
            print("chunk ~ts not found in ~ts\n", [ChunkName, BEAMFile]);
        {ChunkName, BChunk} ->
            Decoded = decode_chunk_data(ChunkName, BChunk),
            print("beam file:\t~s\n"
                  "chunk name:\t~s\n"
                  "chunk data:\n~p\n", [BEAMFile, ChunkName, Decoded])
    end.

decompile([BEAMFile]) ->
    {ok, {_, [{abstract_code, {_, AC}}]}} = beam_lib:chunks(BEAMFile, [abstract_code]),
    io:put_chars(erl_prettypr:format(erl_syntax:form_list(AC))).

print(Fmt, Args) ->
    io:format(Fmt, Args).

decode_chunk_data(_, <<?ERLANG_TERM_FORMAT_TAG:8, _/bytes>> = BChunk) ->
    binary_to_term(BChunk);
decode_chunk_data(_, BChunk) ->
    BChunk.
